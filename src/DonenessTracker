# ‚úÖ Things I Wanna Do Before Release

# üêû Known Bugs
- Keyboard shifting up and down is distracting

# üêù Tasks/Ideas
- Tighten up spacing
  - Prevent text overlap (‚åÉI, Nav) in narrow views
  - Tighten keyboard layout?
  - Fit vertically on laptop‚Ä¶at LEAST my own. üôÑ
- Experiment: try replacing all arrow functions with `function`. Does anything break? Is it better? Worse? How?

- Do a 'naming pass' for consistency. E.g., is it "layoutMap" or "keyMap" or‚Ä¶something clearer?

- Documentation / README

- Publish to Netlify‚Ä¶maybe with custom domain

- Rapid Beta smoke test: Get feedback from friends & fix any urgent issues reported

- Write dev.to post, & post to Reddits for ergodoz/moonlander/colemak

# Overview

Here's a quick summary of the component hierarchy

- Nav
  - Logo
  - CurrentLevel
  - WordScore
  - Clock
  - ‚åÉI (info slideout‚Ä¶NYI)
- Layout Header
- Game
  - PlayTime
    - Display
    - Input
  - GameOver
- Keyboard
  - Toggles

# Playground & Tests

There are also two components accessible only through the super-secret easter-egg keyboard shortcut: ‚å•T, which toggles the hierarchy to look like this ‚Üì.

(App)
  Playground
  Tests

The Playground is a place to mess with idividual components and other Svelty things without having to worry about accidentally checking in breaking changes.

By contrast, Tests.svelte runs (and displays results for) a set of unit tests put together using a dead-simple pattern for tests that I came up with after deciding that I didn't have the patience to follow the multi-step instructions for Jest/Jasmine/Whatever integration since those things don't support ES6 out of the box. It's actually pretty fun to have the test results right in the browser.

It's easy enough to see how the tests work just by looking at the existing ones. Basically, each test result is passed to the display as a 2-part array: [description, result].

ü•∑ Pro tip: Add a 3rd element to the array to have JSON.stringified results appended below a given test. This is handy as a way to get a top-level view into a failing test (or a strangely-passing one) without having to console.log it. As with logging, I prefer not to check these things in, but if you do, at least they won't pollute the running app's console.

ü§û Note: I'm on a Mac. Hopefully alt-T has the same toggling effect on whatever other machines folks are using.

# Icebox
- Dark mode
- Adjust the layout to fit on anything from iPad to external monitor (maybe back to vh's instead of rems?). (I'm not super motivated to do this right now because, well, audience of 1, always on my laptop, with SizeUp ensuring nice wide screen coverage‚Ä¶¬Ø\_(„ÉÑ)_/¬Ø.)
- Persist average accuracy
  - Surface in Results.svelte UX
  - Should be per-layout, per level
- Reduce conversions between strings and arrays? (I just have a feeling
  that there's some unnecessary back-and-forth going on here.)
  - Document every transition that uses .split/.join with either " " or "".
- Auto-select number input when using keyboard shortcuts for Word/Time limit modes
- The entire site has had zero a11y effort put in so far, in part because I haven't used the tech & thus don't understand the issues at play.
- Toy with timeouts to make selecting a layout less distracting?
- Add affordance to show when key remapping's on.
- Game over: persist past scores & display median
- "reset ‚åÉR" command?
- Add some fly-ins/outs? E.g., when collapsing the game area while Custom layout is empty.