# ✅ Things I Wanna Do Before Release

- fngrng Redesign
  - Nav ✅
    - Logo ✅
    - CurrentLevel ✅
      - Dropdown
    - WordScore ✅
      - Dropdown
    - Clock ✅
      - Dropdown
    - ⌃I ✅
      - Slideout
  - Layout Header ✅
    - Dropdown
  - Game
    - PlayTime ✅
      - Display ✅
        - Toggles ✅
      - Input ✅
    - GameOver ✅ (but with future persistence of past scores planned, peer layout & accompanying "reset ⌃R" command?)
  - Keyboard ✅
    - Toggles 🔜

- Implement Clickable bits, starting with the clickable toggles
  - Create Outline component for use with Controls
    <Outline {color} />
      Not totally satisfying. Color is such an easy low-level concept to slather around, but it's not as clear in code what the colors mean as it is in Figma.
  - Wrap 6 components in Controls => Levels & Layout also use MenuOptions component
  - 
  - Auto-hide controls with setTimeout
- Update the Tailwind base colors to better match my Figma mocks
- Add some fly-ins/outs?
- Do a 'naming pass' for consistency. E.g., is it "layoutMap" or "keyMap" or…something clearer?
- Remove $wireframe thingies
- Replace BottomText with other attributions & stuff
- Documentation
- Publish to Netlify…maybe with custom domain
- Write dev.to post, & post to Reddits for ergodoz/moonlander/colemak

# 🐞 Known Bugs
- Heisenbug: sometimes keypress goes to game, not custom thingy ❌
- Weird keyboard blinking bug: set ARST, then click A ❌
  Expected → A blinks and gets brighter
  Actual → A blinks, but ARST all get brighter

- "Over-matching" fails to turn input red
  StR: Example line: "the hat that this"
    - Type "thee"
    Expected → Display has green "the" (because the error's on the space) & Input is red
    Actual → Display has green "the" but Input stays black
    Note: This is a model-level issue. Same bug in both old & new designs
- Custom prompt should be empty if no keys are mapped! (i.e., if the levels are empty)
- Still seing >100% accuracy from time to time. 🙀
- Encountered Capital "Sarah" when capitals not allowed (custom map)
- Holding down a modifier key gets ignored by combo handler. Might need to fork `svelte-keydown` or switch it out for `mousetrap`

# Overview

Here's a quick summary of the component hierarchy

App
  TopNav
    PreferenceMenu
  LevelSelect
    LevelButton
  Main
    GameZone
      ResetButton
      ScrollingPrompt
        SingleCharacter
        SingleWord
      LineByLinePrompt
        SingleLine
        (SingleCharacter)
        (SingleWord)
      UserInput
      ScoreBoard
        WordScore
        Clock
        Results
    VisualKeyboard
      KeyboardDivs
    BottomText
  KeyboardSettings

# Playground & Tests

There are also two components accessible only through the super-secret easter-egg keyboard shortcut: ⌥T, which toggles the hierarchy to look like this ↓.

(App)
  Playground
  Tests

The Playground is a place to mess with idividual components and other Svelty things without having to worry about accidentally checking in breaking changes.

By contrast, Tests.svelte runs (and displays results for) a set of unit tests put together using a dead-simple pattern for tests that I came up with after deciding that I didn't have the patience to follow the multi-step instructions for Jest/Jasmine/Whatever integration since those things don't support ES6 out of the box. It's actually pretty fun to have the test results right in the browser.

It's easy enough to see how the tests work just by looking at the existing ones. Basically, each test result is passed to the display as a 2-part array: [description, result].

🥷 Pro tip: Add a 3rd element to the array to have JSON.stringified results appended below a given test. This is handy as a way to get a top-level view into a failing test (or a strangely-passing one) without having to console.log it. As with logging, I prefer not to check these things in, but if you do, at least they won't pollute the running app's console.

🤞 Note: I'm on a Mac. Hopefully alt-T has the same toggling effect on whatever other machines folks are using.

# Icebox
- Persist average accuracy
  - Surface in Results.svelte UX
  - Should be per-layout, per level
- Reduce conversions between strings and arrays? (I just have a feeling
  that there's some unnecessary back-and-forth going on here.)
  - Document every transition that uses .split/.join with either " " or "".
- Auto-select number input when using keyboard shortcuts for Word/Time limit modes
- The entire site has had zero a11y effort put in so far, in part because I haven't used the tech & thus don't understand the issues at play.
